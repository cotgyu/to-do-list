plugins {
	id 'org.springframework.boot' version '2.3.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.toy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven { url "https://plugins.gradle.org/m2/" }
}


subprojects {
	group = 'com.toy'
	version = '0.0.1-SNAPSHOT'

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'com.ewerk.gradle.plugins.querydsl'

	sourceCompatibility = 11

	repositories {
		mavenCentral()
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		compile("org.mariadb.jdbc:mariadb-java-client")

		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		testImplementation 'org.springframework.security:spring-security-test'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	test {
		useJUnitPlatform()
	}

	//querydsl
	def querydslDir = "$buildDir/generated/querydsl"

	querydsl {
		library = "com.querydsl:querydsl-apt"
		jpa = true
		querydslSourcesDir = querydslDir
	}
	sourceSets {
		main {
			java {
				srcDirs = ['src/main/java', querydslDir]
			}
		}
	}
	compileQuerydsl{
		options.annotationProcessorPath = configurations.querydsl
	}
	configurations {
		querydsl.extendsFrom compileClasspath
	}

}

project(':module-web') {
	dependencies {
		implementation project(path: ':module-domain', configuration: 'default')
	}
}


project(':module-batch') {
	dependencies {
		implementation project(path: ':module-domain', configuration: 'default')
	}
}

bootJar { enabled = false }